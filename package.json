{
  "name": "express-starter",
  "version": "1.5.8",
  "description": "An opinionated Typescript starter setup for Express + Pino.",
  "repository": "https://github.com/steven-xie/express-starter",
  "bugs": {
    "url": "https://github.com/steven-xie/express-starter/issues",
    "email": "dev@stevenxie.me"
  },
  "author": "Steven Xie <hello@stevenxie.me> (https://stevenxie.me)",
  "license": "AAL",
  "config": {
    "dev-log-level": "debug",
    "prod-log-level": "error",
    "jmespath-log-filter": "contains(name, `server`)",
    "browser-live-reload": false,
    "docker-image-version": "1.2.6"
  },
  "scripts": {
    "dev": "./scripts/dev.sh",
    "prod": "./scripts/prod.sh",
    "start": "./scripts/start.sh",
    "build": "[ -d build ] && npm run clean; npm run compile",
    "compile": "tsc --project tsconfig.json",
    "compile-watch": "npm run compile -- --watch",
    "clean": "rimraf build",
    "test": "NODE_ENV=test && npm run build && cd tests && ./runner.sh",
    "prettier": "prettier --write 'src/**/*.ts'",
    "dk-build": "npm run dk-build-prod",
    "dk-build-dev": "./scripts/dk-build.sh development",
    "dk-build-prod": "./scripts/dk-build.sh production",
    "dk-foreground": "docker-compose up",
    "dk-up": "docker-compose up -d",
    "dk-down": "docker-compose down --volumes",
    "dk-start": "docker-compose start express",
    "dk-stop": "docker-compose stop express",
    "dk-restart": "docker-compose restart express",
    "dk-pause": "docker-compose pause",
    "dk-exec": "docker-compose exec",
    "dk-run": "docker-compose run",
    "dk-sh": "npm run dk-exec express sh",
    "dk-cold-sh": "npm run dk-run express sh",
    "dk-test": "npm run dk-run express yarn test",
    "dk-ps": "docker-compose ps",
    "dk-logs": "docker-compose logs express",
    "dk-inspect": "docker inspect express-starter",
    "dk-purge": "npm run dk-down -- --rmi all --remove-orphans",
    "pm2": "pm2 startOrRestart pm2.ecosystem.config.js --env production",
    "pm2-setup": "pm2 deploy pm2.ecosystem.config.js production setup",
    "pm2-deploy": "pm2 deploy pm2.ecosystem.config.js production",
    "pm2-update": "pm2 deploy pm2.ecosystem.config.js production update",
    "pm2-update-force": "npm run pm2-update --force",
    "postinstall": "./scripts/postinstall.sh"
  },
  "dependencies": {
    "body-parser": "^1.18.3",
    "dotenv": "^6.0.0",
    "express": "^4.16.3",
    "express-pino-logger": "^3.0.1",
    "get-port": "^3.2.0",
    "pino": "^4.17.3"
  },
  "devDependencies": {
    "@types/body-parser": "^1.17.0",
    "@types/express": "^4.16.0",
    "@types/node": "^10.3.2",
    "@types/opn": "^5.1.0",
    "@types/pino": "^4.16.0",
    "chai": "^4.1.2",
    "chai-http": "^4.0.0",
    "concurrently": "^3.5.1",
    "nodemon": "^1.17.5",
    "opn": "^5.3.0",
    "pino-pretty": "https://github.com/pinojs/pino-pretty.git#v2.0.0-rc.1",
    "prettier": "^1.13.5",
    "rimraf": "^2.6.2",
    "source-map-support": "^0.5.6",
    "typescript": "^2.9.1"
  }
}
